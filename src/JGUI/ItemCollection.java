/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package JGUI;

import Item.Item;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.ArrayList;

/**
 *
 * @author rahma
 */
public class ItemCollection extends javax.swing.JPanel {

    public ItemCollection() {
        this(new ArrayList<Item>());
    }
    /**
     * Creates new form ItemCollection
     * @param items
     */
    public ItemCollection(ArrayList<Item> items) {
        initComponents();
        this.setPreferredSize(new Dimension(460,300));
        this.renderCollection(items);
    }
    
//    public final void renderCollection(ArrayList<ItemPanel> items){
//        this.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
//        this.setLayout(new GridLayout(0,1+(int) items.size()/4,18,18));
//        
//        int index = 1;
//        for (ItemPanel item : items){
//            this.add(item);
//            item.resize(item.minimumSize().width, item.minimumSize().height);
//        }
//    }
    public  final void renderCollection(ArrayList<Item> items){
        this.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
        this.setLayout(new GridLayout(0,1+(int) items.size()/4,18,18));
        
            System.out.println(items.size());
        for (Item item : items){
            System.out.println(item.getName());
            CustomerItemDetail tempDetail = new CustomerItemDetail(item);
            
            ItemPanel tempPanel = new ItemPanel();
            tempPanel.setItemName(item.getName());
            tempPanel.setItemForm(tempDetail);
            
            this.add(tempPanel);
            tempPanel.resize(tempPanel.minimumSize().width, tempPanel.minimumSize().height);
        }
    }
    public final void renderCollection(ArrayList<Item> items, boolean managePanel){
        this.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
        this.setLayout(new GridLayout(0,1+(int) items.size()/4,18,18));
        
            System.out.println(items.size());
        for (Item item : items){
            System.out.println(item.getName());
            CustomerItemDetail tempDetail = new CustomerItemDetail(item);
            
            ItemPanel tempPanel = new ItemPanel();
            tempPanel.setItemName(item.getName());
            tempPanel.setItemForm(tempDetail);
            
            this.add(tempPanel);
            tempPanel.resize(tempPanel.minimumSize().width, tempPanel.minimumSize().height);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMaximumSize(new java.awt.Dimension(460, 300));
        setMinimumSize(new java.awt.Dimension(460, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
